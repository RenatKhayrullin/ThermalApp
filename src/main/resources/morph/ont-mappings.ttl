@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix www: <http://www.ThermalDb.ru#> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#ChemicalSubstance>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct cs.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.substances_in_states as cs_s on filter.substance_in_state_id = cs_s.id
            inner join ont.chemical_substances as cs on cs_s.substance_id = cs.id
        
        """
	];

	rr:subjectMap [
		rr:class www:ChemicalSubstance;
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#{substance_name}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasChemicalName;
		rr:objectMap [ rr:column "substance_name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate www:hasChemicalFormula;
		rr:objectMap [ rr:column "chemical_formula"; rr:datatype xsd:string; ];
	].

<#DataSet>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct ds.* from ont.data_sets as ds where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false
        
        """
	];

	rr:subjectMap [
		rr:class www:DataSet;
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#DataSet{id}";
		rr:termType rr:IRI;
	];

    rr:predicateObjectMap [
        rr:predicate www:hasADataSetStatus;
        rr:objectMap [ rr:column "set_description"; rr:datatype xsd:string; ];
    ];

    rr:predicateObjectMap [
        rr:predicate www:isADataForSubstanceInState;
        rr:objectMap [
            rr:parentTriplesMap <#SubstanceInState>;
            rr:joinCondition [
	        	rr:child "substance_in_state_id";
	            rr:parent "id";
	        ];
        ];
   ].

<#DataSource>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct ds.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
            inner join ont.data_sources as ds on pm.data_source_id = ds.id
        
        """
	];

	rr:subjectMap [
		rr:class www:DataSource;
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#DataSource{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasASourceOfInformation;
		rr:objectMap [ rr:column "data_source_name"; rr:datatype xsd:string; ];
	].

<#Dimension>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct d.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
            inner join ont.dimensions as d on pm.dimension_id = d.id
        
        """
	];

	rr:subjectMap [
		rr:classs www:Dimension;
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#Dim{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasADimensionName;
		rr:objectMap [ rr:column "dimension_name"; rr:datatype xsd:string; ];
	];

    rr:predicateObjectMap [
        rr:predicate www:hasADimDesignation;
        rr:objectMap [ rr:column "dimension_designation"; rr:datatype xsd:string; ];
    ].
    
<#PhysicalQuantity>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery """
        
            select distinct pq.*, (case pq.quantity_type_id when 1 then 'Arguments'
                                                            when 2 then 'Contstants'
                                                            when 3 then 'Functions'
                                                            when 4 then 'SubstanceConstants' end) as role_type
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
            inner join ont.physical_quantities as pq on pm.physical_quantity_id = pq.id
        
        """
	];

	rr:subjectMap [
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#PQ_{quantity_name}";
		rr:termType rr:IRI;
	];

    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:template "http://www.ThermalDb.ru#{role_type}" ];
    ];

	rr:predicateObjectMap [
		rr:predicate www:hasAPhysicalQuantityName;
		rr:objectMap [ rr:column "quantity_name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate www:hasAPhysicalQuantityDesignation;
		rr:objectMap [ rr:column "quantity_designation"; rr:datatype xsd:string; ];
	].

<#PointOfMeasure>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct pm.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
        
        """
	];

	rr:subjectMap [
		rr:class www:PointOfMeasure;
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#PM{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasAPhysicalQuantityValue;
		rr:objectMap [ rr:column "measure_value"; rr:datatype xsd:real; ];
	];

	rr:predicateObjectMap [
		rr:predicate www:hasRowCount;
		rr:objectMap [ rr:column "row_count"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
        rr:predicate www:hasADataSource;
        rr:objectMap [
            rr:parentTriplesMap <#DataSource>;
            rr:joinCondition [
	        	rr:child "data_source_id";
	            rr:parent "id";
	        ];
        ];
	];

	rr:predicateObjectMap [
        rr:predicate www:hasAMeasurementUncertainty;
        rr:objectMap [
            rr:parentTriplesMap <#Uncertainty>;
            rr:joinCondition [
	        	rr:child "id";
	            rr:parent "point_of_measure_id";
	        ];
        ];
	];

	rr:predicateObjectMap [
        rr:predicate www:isAPartOfDataSet;
        rr:objectMap [
            rr:parentTriplesMap <#DataSet>;
            rr:joinCondition [
	        	rr:child "data_set_id";
	            rr:parent "id";
	        ];
        ];
	];

	rr:predicateObjectMap [
        rr:predicate www:isAValueOfPhysicalQuantity;
        rr:objectMap [
            rr:parentTriplesMap <#PhysicalQuantity>;
            rr:joinCondition [
	        	rr:child "physical_quantity_id";
	            rr:parent "id";
	        ];
        ];
	];

	rr:predicateObjectMap [
        rr:predicate www:measuredInDimension;
        rr:objectMap [
            rr:parentTriplesMap <#Dimension>;
            rr:joinCondition [
	        	rr:child "dimension_id";
	            rr:parent "id";
	        ];
        ];
	].
    
<#State>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct s.*, (case s.phase_type when 'single phase state' then 'SinglePhaseState'
                                                    when 'double phase state' then 'DoublePhaseState'
                                                    when 'triple phase state' then 'TriplePhaseState' end) as state_type
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.substances_in_states as cs_s on filter.substance_in_state_id = cs_s.id
            inner join ont.states as s on cs_s.state_id  = s.id
        
        """
	];

	rr:subjectMap [
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#State{id}";
		rr:termType rr:IRI;
	];

    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [ rr:template "http://www.ThermalDb.ru#{state_type}" ];
    ];

	rr:predicateObjectMap [
		rr:predicate www:hasStateName;
		rr:objectMap [ rr:column "state_name"; rr:datatype xsd:string; ];
	].
    
<#SubstanceInState>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct cs_s.*, cs.substance_name, s.id as s_id
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.substances_in_states as cs_s on filter.substance_in_state_id = cs_s.id
            inner join ont.chemical_substances as cs on cs_s.substance_id = cs.id
            inner join ont.states as s on cs_s.state_id  = s.id
        
        """
	];

	rr:subjectMap [
		rr:class www:SubstanceInState;
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#{substance_name}InState{s_id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
        rr:predicate www:isInState;
        rr:objectMap [
            rr:parentTriplesMap <#State>;
            rr:joinCondition [
	        	rr:child "state_id";
	            rr:parent "id";
	        ];
        ];
	];

	rr:predicateObjectMap [
        rr:predicate www:isASubstance;
        rr:objectMap [
            rr:parentTriplesMap <#ChemicalSubstance>;
            rr:joinCondition [
	        	rr:child "substance_id";
	            rr:parent "id";
	        ];
        ];
	].

<#Uncertainty>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct mu.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
            inner join ont.measurement_uncertainties as mu on pm.id = mu.point_of_measure_id
        
        """
	];

	rr:subjectMap [
		rr:class www:Uncertainty;
		rr:class owl:NamedIndividual;
		rr:template "http://www.ThermalDb.ru#Unc{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasAnUncertaintyValue;
		rr:objectMap [ rr:column "uncertainty_value"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
        rr:predicate www:hasAnUncertaintyType;
        rr:objectMap [
            rr:parentTriplesMap <#UncertaintyType>;
            rr:joinCondition [
	        	rr:child "uncertainty_type_id";
	            rr:parent "id";
	        ];
        ];
	].
    
<#UncertaintyType>
	a rr:TriplesMap;

	rr:logicalTable [
		rr:sqlQuery """
        
            select distinct ut.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
            inner join ont.measurement_uncertainties as mu on pm.id = mu.point_of_measure_id
            inner join ont.uncertainty_types as ut on mu.uncertainty_type_id = ut.id
        
        """
	];

	rr:subjectMap [
		rr:class owl:NamedIndividual;
		rr:class www:UncertaintyType;
		rr:template "http://www.ThermalDb.ru#UT_{uncertainty_name}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasATypeName;
		rr:objectMap [ rr:column "uncertainty_name"; rr:datatype xsd:string; ];
	].

#----chem 2 phys_quant

<#chem2phys_quant>
	a rr:TriplesMap;

	rr:logicalTable [
        rr:sqlQuery """
        
            select distinct cs_pq.*, cs.*, pq.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.substances_in_states as cs_s on filter.substance_in_state_id = cs_s.id
            inner join ont.chemical_substances as cs on cs_s.substance_id = cs.id
            inner join ont.chem_subst_quantities as cs_pq on cs_pq.substance_id = cs.id
            inner join ont.physical_quantities as pq on cs_pq.quantity_id  = pq.id
        
        """
	];

	rr:subjectMap [
		rr:template "http://www.ThermalDb.ru#{substance_name}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasAConstantQuantity;
		rr:objectMap [ rr:template "http://www.ThermalDb.ru#PQ_{quantity_name}" ];
	].

<#phys_quant2chem>
	a rr:TriplesMap;

	rr:logicalTable [ 
        rr:sqlQuery """
        
            select distinct cs_pq.*, cs.*, pq.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.substances_in_states as cs_s on filter.substance_in_state_id = cs_s.id
            inner join ont.chemical_substances as cs on cs_s.substance_id = cs.id
            inner join ont.chem_subst_quantities as cs_pq on cs_pq.substance_id = cs.id
            inner join ont.physical_quantities as pq on cs_pq.quantity_id  = pq.id
        
        """
	];

	rr:subjectMap [
		rr:template "http://www.ThermalDb.ru#PQ_{quantity_name}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:isASubstanceConstant;
		rr:objectMap [ rr:template "http://www.ThermalDb.ru#{substance_name}" ];
	].

#---dim 2 phys quant

<#dim2phys_quant>
	a rr:TriplesMap;

	rr:logicalTable [
        rr:sqlQuery """
        
            select distinct d_pq.*, d.id as d_id, pq.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
            inner join ont.dimensions as d on pm.dimension_id = d.id
            inner join ont.physical_quantities_dimensions as d_pq  on d_pq.dimension_id = d.id
            inner join ont.physical_quantities as pq on d_pq.quantity_id  = pq.id
        
        """
	];

	rr:subjectMap [
		rr:template "http://www.ThermalDb.ru#Dim{d_id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:correspondsWithPhysicalQuantities;
		rr:objectMap [ rr:template "http://www.ThermalDb.ru#PQ_{quantity_name}" ];
	].

<#phys_quant2dim>
	a rr:TriplesMap;

	rr:logicalTable [ 
        rr:sqlQuery """
        
            select distinct d_pq.*, d.id as d_id, pq.*
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.points_of_measure as pm on pm.data_set_id = filter.id
            inner join ont.dimensions as d on pm.dimension_id = d.id
            inner join ont.physical_quantities_dimensions as d_pq  on d_pq.dimension_id = d.id
            inner join ont.physical_quantities as pq on d_pq.quantity_id  = pq.id
        
        """
	];

	rr:subjectMap [
		rr:template "http://www.ThermalDb.ru#PQ_{quantity_name}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasACorrespondingDimension;
		rr:objectMap [ rr:template "http://www.ThermalDb.ru#Dim{d_id}" ];
	].

#---phys quant 2 states
<#phys_quant2state>
	a rr:TriplesMap;

	rr:logicalTable [
        rr:sqlQuery """
        
            select distinct s_pq.*, s.id as s_id, pq.quantity_name
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.substances_in_states as cs_s on filter.substance_in_state_id = cs_s.id
            inner join ont.states as s on cs_s.state_id  = s.id
            inner join ont.physical_quantities_states as s_pq on s_pq.state_id = s.id
            inner join ont.physical_quantities        as pq on s_pq.physical_quantity_id  = pq.id
        
        """
	];

	rr:subjectMap [
		rr:template "http://www.ThermalDb.ru#PQ_{quantity_name}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:existsInState;
		rr:objectMap [ rr:template "http://www.ThermalDb.ru#State{s_id}" ];
	].

<#state2phys_quant>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery """
        
            select distinct s_pq.*, s.id as s_id, pq.quantity_name
            from (select * from ont.data_sets where isuploadedtoviewmodel is null or isuploadedtoviewmodel = false) as filter
            inner join ont.substances_in_states as cs_s on filter.substance_in_state_id = cs_s.id
            inner join ont.states as s on cs_s.state_id  = s.id
            inner join ont.physical_quantities_states as s_pq on s_pq.state_id = s.id
            inner join ont.physical_quantities        as pq on s_pq.physical_quantity_id  = pq.id
        
        """
	];

	rr:subjectMap [
		rr:template "http://www.ThermalDb.ru#State{s_id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate www:hasAMeasurablePhysicalQuantity;
		rr:objectMap [ rr:template "http://www.ThermalDb.ru#PQ_{quantity_name}" ];
	].
